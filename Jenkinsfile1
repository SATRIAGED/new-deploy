pipeline {

    agent any

    stages {
        
        stage('Setup parameters') {
            steps {
                script {
                properties([
                    parameters([
                    string(

                        name: 'GCP_PROJECT_ID',
                        trim: true
                    ),
                    string(

                        name: 'GCP_PROJECT_ZONE',
                        trim: true
                    ),
                    string(

                        name: 'GCR_IMAGE_NAME',
                        trim: true
                    ),
                    string(

                        name: 'GCR_IMAGE_TAG',
                        trim: true
                    ),
                    string(

                        name: 'GKE_CLUSTER_NAME',
                        trim: true
                    )
                    ]),
                    string(

                        name: 'GITHUB_REPO_URL',
                        trim: true
                    )
                    ])
                ])
                }
            }
        }

        stage('Cloning our Git') {
            steps {
                git "${params.GITHUB_REPO_URL}"
            }
        }

        stage("building the image") {
            steps {
                script {
                    sh "docker build -t gcr.io/${params.GCP_PROJECT_ID}/${params.GCR_IMAGE_NAME}:${params.GCR_IMAGE_TAG} ."
                }
            }
        }

        stage("pushing to GCR") {
            steps {
                withDockerRegistry([credentialsId: "gcr:${params.GCP_PROJECT_ID}", url: "https://gcr.io"]) {
                    sh "gcloud auth configure-docker gcr.io"
                    sh "docker push gcr.io/${params.GCP_PROJECT_ID}/${params.GCR_IMAGE_NAME}:${params.GCR_IMAGE_TAG}"
                }
            }
        }

        stage("installing the helm chart") {
            steps {
                withCredentials([vaultString(credentialsId: 'gcp-credentials', variable: '')]) {
                    sh("gcloud container clusters get-credentials ${params.GKE_CLUSTER_NAME} --zone ${params.GCP_PROJECT_ZONE} --project ${params.GCP_PROJECT_ID}")
                    sh "helm install \
                            --set image.repository=gcr.io/${params.GCP_PROJECT_ID}/${params.GCR_IMAGE_NAME} \
                            --set image.tag=${params.GCR_IMAGE_TAG} \
                        new-helm new-deploy"
                    sh "sleep 45s"
                    sh "kubectl get svc --namespace default new-helm-new-deploy"
                }
            }
        }
    }
}